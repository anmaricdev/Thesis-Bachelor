<Exercise id="1">
  <name>Guess The Algorithm</name>
  <internalNotes />
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2" />
  <resources id="3" />
  <stages id="4">
    <FillInStage id="5">
      <internalName>#1</internalName>
      <externalName>Guess the algorithm</externalName>
      <taskDescription>&lt;div&gt;&amp;nbsp;&lt;img src="../resource?resource=[var=question_1_image_id]"&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;p style="margin-top: 0;"&gt;You are given the final state of packed bins and the original list of items.&lt;br&gt;Based on the result, determine &lt;strong&gt;which&lt;/strong&gt; bin packing &lt;strong&gt;algorithm&lt;/strong&gt; was used.&lt;/p&gt;
&lt;div style="background-color: #f5f5dc; color: #333; padding: 15px; border-radius: 8px; border: 1px solid #ccc; font-family: Arial, sans-serif;"&gt;Please select the bin packing algorithm that was used to produce the given result.&lt;br&gt;Use the dropdown field below to choose the correct option from the list:&lt;br&gt;&lt;br&gt;&lt;strong&gt;Available algorithms:&lt;/strong&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Best Fit&lt;br&gt;&amp;bull;&amp;nbsp; First Fit&lt;br&gt;&amp;bull;&amp;nbsp; Next Fit&lt;br&gt;&amp;bull;&amp;nbsp; Worst Fit&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;select name="Answer"&gt;
&lt;option value="0"&gt;Answer&lt;/option&gt;
&lt;/select&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;details style="border-radius: 5px; display: inline-block; max-width: 100%; width: 100%;"&gt;
&lt;summary style="cursor: pointer; font-size: 16px; display: inline-block; padding: 10px 15px; background-color: #ccc; border-radius: 5px;"&gt;Toggle Code&lt;/summary&gt;
&lt;div style="background-color: #f0f0f0; border-radius: 5px; margin-top: 5px; padding: 10px; max-width: 100%; max-height: 50vh; width: fit-content; overflow: auto;"&gt;
&lt;div class="highlight" style="background: #f0f0f0;"&gt;
&lt;table class="highlighttable"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="linenos"&gt;
&lt;div class="linenodiv"&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  1&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  2&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  3&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  4&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  5&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  6&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  7&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  8&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  9&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 10&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 11&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 12&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 13&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 14&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 15&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 16&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 17&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 18&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 19&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 20&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 21&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 22&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 23&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 24&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 25&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 26&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 27&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 28&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 29&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 30&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 31&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 32&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 33&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 34&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 35&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 36&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 37&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 38&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 39&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 40&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 41&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 42&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 43&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 44&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 45&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 46&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 47&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 48&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 49&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 50&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 51&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 52&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 53&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 54&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 55&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 56&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 57&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 58&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 59&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 60&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 61&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 62&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 63&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 64&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 65&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 66&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 67&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 68&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 69&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 70&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 71&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 72&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 73&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 74&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 75&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 76&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 77&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 78&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 79&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 80&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 81&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 82&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 83&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 84&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 85&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 86&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 87&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 88&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 89&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 90&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 91&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 92&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 93&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 94&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 95&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 96&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 97&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 98&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 99&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;100&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;101&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;102&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;103&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;104&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;105&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;106&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;107&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;108&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;109&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;110&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;111&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;112&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;113&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;114&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;115&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;116&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;117&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;118&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;119&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;120&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;121&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;122&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;123&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;124&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;125&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;126&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;127&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;128&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;129&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;130&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;131&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;132&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;133&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;134&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;135&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;136&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;137&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;138&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;139&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;140&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;141&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;142&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;143&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;144&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;145&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;146&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;147&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;148&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;149&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;150&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;151&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;152&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;153&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;154&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;155&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;156&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;157&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;158&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;159&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;160&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;161&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;162&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;163&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;164&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;165&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;166&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;167&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;168&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;169&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;170&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;171&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;172&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;173&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;174&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;175&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;176&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;177&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;178&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;179&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;180&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;181&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;182&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;183&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;184&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;185&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;186&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;187&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;188&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;189&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;190&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;191&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;192&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;193&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;194&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;195&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;196&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;197&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;198&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;199&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;200&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;201&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;202&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;203&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="code"&gt;
&lt;div&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #60a0b0; font-style: italic;"&gt;# First Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    i &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
    found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; i &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; found:
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[i]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacities[i]:
        found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        i &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; found:
      bins[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; bin_packing_first_fit_var_capa([bin_capacity] &lt;span style="color: #666666;"&gt;*&lt;/span&gt; m, elements)


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Next Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
        bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
        &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
          bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
            &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; bin_capacities[current_bin]:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Best Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; []
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  last_added_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# if not found: add new bin, if possible&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; last_added_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m&lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      last_added_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      bins_in_use &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [last_added_bin]
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; elem
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; last_added_bin
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found? - if not: new bin - does it fit there?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; max_capacity &lt;span style="color: #666666;"&gt;+&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Worst Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure
&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;</taskDescription>
      <feedbackRules id="6" />
      <defaultTransition id="7">
        <conditionExpression id="8">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="9">
          <domain>MATH</domain>
        </stageExpression>
        <type>NEXT_OR_END</type>
        <extraWeight>0</extraWeight>
      </defaultTransition>
      <skipTransitions id="10" />
      <stageTransitions id="11" />
      <hints id="12" />
      <variableUpdatesOnEnter id="13" />
      <variableUpdatesBeforeCheck id="14" />
      <variableUpdatesAfterCheck id="15" />
      <variableUpdatesOnNormalExit id="16" />
      <variableUpdatesOnRepeat id="17" />
      <variableUpdatesOnSkip id="18" />
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>true</allowSkip>
      <resources id="19" />
      <fillInFields id="20" />
      <dropDownFields id="21">
        <de.uni__due.s3.jack3.entities.stagetypes.fillin.DropDownField id="22">
          <name>Answer</name>
          <orderIndex>0</orderIndex>
          <randomize>true</randomize>
          <items id="23">
            <string>Best-Fit</string>
            <string>First-Fit</string>
            <string>Next-Fit</string>
            <string>Worst-Fit</string>
          </items>
          <resultType>INDEX</resultType>
        </de.uni__due.s3.jack3.entities.stagetypes.fillin.DropDownField>
      </dropDownFields>
      <kekuleFields id="24" />
      <formulaEditorPalette>INVISIBLE_MATH</formulaEditorPalette>
      <defaultFeedback>&lt;div&gt;Incorrect.&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f7f7f7; border: 1px solid #d1d1d1; padding: 12px 16px; border-radius: 6px; color: #333;"&gt;
&lt;h4 style="margin-top: 0; color: #444;"&gt;Solution: [var=correct_algorithm_question_1]&lt;/h4&gt;
&lt;ul style="list-style-type: none; padding-left: 0; margin: 0;"&gt;
&lt;li&gt;&lt;span style="color: black;"&gt;[0]&lt;/span&gt; = Best Fit&lt;/li&gt;
&lt;li&gt;&lt;span style="color: black;"&gt;[1]&lt;/span&gt; = First Fit&lt;/li&gt;
&lt;li&gt;&lt;span style="color: black;"&gt;[2]&lt;/span&gt; = Next Fit&lt;/li&gt;
&lt;li&gt;&lt;span style="color: black;"&gt;[3]&lt;/span&gt; = Worst Fit&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style="background-color: #f6fff8; border-left: 6px solid #2e7d32; padding: 16px; border-radius: 8px; font-family: Arial, sans-serif; color: #2e4831; line-height: 1.6; font-size: 15px;"&gt;&lt;strong&gt;Hint: Understanding the Bin Packing Algorithms&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Best-Fit&lt;/strong&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Tries to use space as efficiently as possible.&lt;br&gt;&amp;bull;&amp;nbsp; Look at &lt;strong&gt;all&lt;/strong&gt; bins that can fit the item.&lt;br&gt;&amp;bull;&amp;nbsp; Choose the bin with the &lt;strong&gt;&lt;em&gt;LEAST&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;remaining capacity&lt;/strong&gt; after placing the item.&lt;br&gt;&lt;br&gt;&lt;strong&gt;First-Fit&lt;/strong&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Checks bins in order: &lt;em&gt;Bin 1, then Bin 2, then Bin 3...&lt;/em&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Scans bins &lt;strong&gt;sequentially&lt;/strong&gt; from the first one.&lt;br&gt;&amp;bull;&amp;nbsp; Places the item in the &lt;strong&gt;first bin&lt;/strong&gt; that has &lt;strong&gt;enough&lt;/strong&gt; &lt;strong&gt;remaining capacity&lt;/strong&gt;.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Next-Fit&lt;/strong&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Continues from the &lt;strong&gt;last&lt;/strong&gt; &lt;strong&gt;bin&lt;/strong&gt; that was &lt;strong&gt;used&lt;/strong&gt;.&lt;br&gt;&amp;bull;&amp;nbsp; Try to place the item in the &lt;strong&gt;current&lt;/strong&gt; bin first.&lt;br&gt;&amp;bull;&amp;nbsp; If it &lt;strong&gt;doesn&amp;rsquo;t&lt;/strong&gt; fit, move to the &lt;strong&gt;next bin&lt;/strong&gt; in sequence.&lt;br&gt;&amp;bull;&amp;nbsp; Unlike &lt;em&gt;First-Fit&lt;/em&gt;, you do &lt;strong&gt;&lt;em&gt;not&lt;/em&gt; go back&lt;/strong&gt; and check &lt;strong&gt;previous&lt;/strong&gt; bins.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Worst-Fit&lt;/strong&gt;&lt;br&gt;&amp;bull;&amp;nbsp; Tries to spread items out as much as possible.&lt;br&gt;&amp;bull;&amp;nbsp; Look at &lt;strong&gt;all&lt;/strong&gt; bins that can fit the item.&lt;br&gt;&amp;bull;&amp;nbsp; Choose the bin with the &lt;strong&gt;&lt;em&gt;MOST&lt;/em&gt; remaining capacity&lt;/strong&gt; before placing the item.&lt;/div&gt;</defaultFeedback>
      <correctAnswerRules id="25">
        <FeedbackRule id="26">
          <name>Feedback 1</name>
          <orderIndex>1</orderIndex>
          <validationExpression id="27">
            <code>[input=Answer]==[var=correct_algorithm_question_1]</code>
            <domain>MATH</domain>
          </validationExpression>
          <points>0</points>
          <terminal>false</terminal>
          <fieldsToBeMarked id="28" />
        </FeedbackRule>
      </correctAnswerRules>
      <correctAnswerFeedback>&lt;div&gt;Correct.&lt;/div&gt;</correctAnswerFeedback>
      <defaultResult>0</defaultResult>
      <kekuleEditorConfigurations id="29">
        <configs id="30">
          <kekuleConfiguration id="31">
            <name>commonToolButtons</name>
            <selectedOption id="32">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="33">
            <name>chemToolButtons</name>
            <selectedOption id="34">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="35">
            <name>allowedObjModifierCategories</name>
            <selectedOption id="36">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="37">
            <name>availableBondForms</name>
            <selectedOption id="38">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="39">
            <name>availableNonAtomTypes</name>
            <selectedOption id="40">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="41">
            <name>defHydrogenDisplayLevel</name>
            <selectedOption id="42">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
        </configs>
      </kekuleEditorConfigurations>
    </FillInStage>
  </stages>
  <startStage class="FillInStage" reference="5" />
  <variableDeclarations id="43">
    <VariableDeclaration id="44">
  <name>index_question_1</name>
  <initializationCode id="45">
    <code>randomIntegerBetween(0, 40)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="46">
  <name>bin_capacities_question_1</name>
  <initializationCode id="47">
    <code>list(&apos;[11, 12, 10, 8]&apos;, &apos;[12, 10]&apos;, &apos;[11, 8, 11, 11]&apos;, &apos;[9, 7, 11]&apos;, &apos;[11, 11, 8]&apos;, &apos;[11, 10]&apos;, &apos;[10, 11, 6, 6]&apos;, &apos;[12, 10, 10, 7]&apos;, &apos;[9, 12]&apos;, &apos;[11, 11, 12, 10]&apos;, &apos;[9, 9]&apos;, &apos;[10, 10, 12]&apos;, &apos;[12, 10, 9, 11]&apos;, &apos;[10, 9, 6]&apos;, &apos;[12, 9]&apos;, &apos;[8, 12, 7]&apos;, &apos;[10, 6, 12]&apos;, &apos;[11, 9, 7, 12]&apos;, &apos;[6, 12, 7]&apos;, &apos;[8, 10, 10]&apos;, &apos;[12, 7, 11, 12]&apos;, &apos;[9, 6, 12]&apos;, &apos;[10, 10, 10]&apos;, &apos;[12, 11]&apos;, &apos;[11, 12, 10]&apos;, &apos;[7, 7, 6]&apos;, &apos;[9, 10, 9, 9]&apos;, &apos;[6, 11, 7, 8]&apos;, &apos;[8, 9, 8]&apos;, &apos;[11, 11]&apos;, &apos;[8, 12, 10]&apos;, &apos;[10, 8]&apos;, &apos;[11, 7, 9]&apos;, &apos;[11, 6]&apos;, &apos;[11, 11, 7, 12]&apos;, &apos;[6, 9, 12, 7]&apos;, &apos;[11, 10, 9, 12]&apos;, &apos;[7, 7, 9]&apos;, &apos;[8, 9, 11, 6]&apos;, &apos;[12, 9]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="48">
  <name>bin_capacity_question_1</name>
  <initializationCode id="49">
    <code>getFromList([var=index_question_1],[var=bin_capacities_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="50">
  <name>items_question_1</name>
  <initializationCode id="51">
    <code>list(&apos;[2, 4, 3, 4, 6, 5]&apos;, &apos;[3, 3, 5, 4, 7]&apos;, &apos;[8, 7, 3]&apos;, &apos;[3, 7, 4, 8]&apos;, &apos;[2, 4, 2, 8]&apos;, &apos;[8, 4, 3, 3]&apos;, &apos;[3, 4, 6, 8, 5, 3]&apos;, &apos;[5, 8, 6]&apos;, &apos;[4, 5, 2, 2]&apos;, &apos;[2, 8, 8, 8, 7, 3]&apos;, &apos;[2, 8, 4, 3, 3]&apos;, &apos;[5, 8, 6, 5]&apos;, &apos;[8, 8, 7, 4]&apos;, &apos;[2, 3, 6, 3, 3]&apos;, &apos;[2, 8, 4]&apos;, &apos;[5, 4, 6, 3, 5]&apos;, &apos;[3, 7, 8, 5, 4]&apos;, &apos;[2, 6, 6, 4]&apos;, &apos;[2, 6, 3]&apos;, &apos;[8, 7, 8, 8]&apos;, &apos;[5, 3, 8, 4, 5]&apos;, &apos;[6, 8, 7, 8, 5, 4]&apos;, &apos;[8, 7, 6, 6, 6, 2]&apos;, &apos;[6, 7, 5, 5, 2, 8]&apos;, &apos;[8, 5, 3, 8, 8, 4]&apos;, &apos;[3, 2, 6, 4, 4, 3]&apos;, &apos;[2, 8, 4, 3, 5, 3]&apos;, &apos;[3, 7, 6, 4]&apos;, &apos;[5, 7, 5]&apos;, &apos;[7, 4, 6]&apos;, &apos;[7, 2, 7, 6]&apos;, &apos;[5, 8, 2, 6]&apos;, &apos;[5, 7, 4]&apos;, &apos;[6, 4, 2, 6]&apos;, &apos;[4, 7, 8]&apos;, &apos;[5, 2, 2, 8, 2, 5]&apos;, &apos;[8, 5, 3, 7]&apos;, &apos;[2, 7, 5]&apos;, &apos;[6, 7, 2, 6]&apos;, &apos;[2, 8, 5, 6, 5, 5]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="52">
  <name>item_question_1</name>
  <initializationCode id="53">
    <code>getFromList([var=index_question_1],[var=items_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="54">
  <name>correct_algorithms_question_1</name>
  <initializationCode id="55">
    <code>list(3, 0, 1, 2, 0, 2, 1, 1, 3, 1, 2, 3, 1, 3, 0, 2, 2, 0, 2, 3, 3, 3, 3, 2, 2, 0, 0, 1, 3, 3, 3, 2, 2, 0, 3, 0, 3, 2, 2, 0)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="56">
  <name>correct_algorithm_question_1</name>
  <initializationCode id="57">
    <code>getFromList([var=index_question_1],[var=correct_algorithms_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="58">
  <name>image_ids_start</name>
  <initializationCode id="59">
    <code>Put image start id here</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="60">
  <name>question_1_image_id</name>
  <initializationCode id="61">
    <code>[var=image_ids_start] + 0 + [var=index_question_1]</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration></variableDeclarations>
  <jSXGraphs id="62" />
  <dynamicMolecules id="63" />
  <resultFeedbackMappings id="64" />
</Exercise>