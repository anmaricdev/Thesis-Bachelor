<Exercise id="1">
  <name>Which Bin? (Online Algorithm Placement)</name>
  <internalNotes />
  <language>de</language>
  <difficulty>0</difficulty>
  <tags id="2" />
  <resources id="3" />
  <stages id="4">
    <FillInStage id="5">
      <internalName>#1</internalName>
      <externalName>Which bin?</externalName>
      <taskDescription>&lt;div&gt;&amp;nbsp;&lt;img src="../resource?resource=[var=question_1_image_id]"&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;You are given the current state of bins with their remaining capacities and a list of items that have already been placed.&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #fdf8f3; border: 1px solid #e6d8c3; padding: 12px 16px; border-radius: 6px; color: #333;"&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;Items already packed:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=item_question_1]&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;The next item to be packed is:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=next_item_question_1]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p data-start="277" data-end="382"&gt;Using the &lt;strong data-start="303" data-end="326"&gt;Best-Fit Algorithm&lt;/strong&gt;, determine &lt;strong data-start="338" data-end="351"&gt;which bin&lt;/strong&gt; this item will be placed in.&lt;/p&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f4f9ff; border: 1px solid #c8e1ff; padding: 14px 18px; border-radius: 6px; color: #333;"&gt;
&lt;ul&gt;
&lt;li&gt;Enter the &lt;strong&gt;bin number&lt;/strong&gt; (&lt;em&gt;1, 2, 3, &amp;hellip;&lt;/em&gt;) corresponding to the bin where the item will go.&lt;/li&gt;
&lt;li&gt;If the item does not fit into any existing bin, enter &lt;strong&gt;0&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span id="courseTestForm:stages"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;input name="a" size="20" type="text" value="a"&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;details style="border-radius: 5px; display: inline-block; max-width: 100%; width: 100%;"&gt;
&lt;summary style="cursor: pointer; font-size: 16px; display: inline-block; padding: 10px 15px; background-color: #ccc; border-radius: 5px;"&gt;Toggle Code&lt;/summary&gt;
&lt;div style="background-color: #f0f0f0; border-radius: 5px; margin-top: 5px; padding: 10px; max-width: 100%; max-height: 50vh; width: fit-content; overflow: auto;"&gt;
&lt;div class="highlight" style="background: #f0f0f0;"&gt;
&lt;table class="highlighttable"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="linenos"&gt;
&lt;div class="linenodiv"&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  1&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  2&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  3&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  4&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  5&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  6&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  7&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  8&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  9&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 10&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 11&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 12&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 13&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 14&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 15&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 16&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 17&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 18&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 19&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 20&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 21&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 22&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 23&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 24&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 25&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 26&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 27&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 28&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 29&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 30&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 31&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 32&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 33&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 34&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 35&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 36&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 37&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 38&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 39&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 40&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 41&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 42&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 43&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 44&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 45&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 46&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 47&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 48&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 49&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 50&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 51&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 52&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 53&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 54&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 55&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 56&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 57&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 58&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 59&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 60&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 61&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 62&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 63&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 64&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 65&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 66&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 67&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 68&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 69&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 70&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 71&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 72&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 73&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 74&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 75&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 76&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 77&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 78&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 79&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 80&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 81&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 82&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 83&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 84&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 85&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 86&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 87&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 88&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 89&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 90&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 91&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 92&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 93&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 94&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 95&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 96&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 97&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 98&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 99&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;100&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;101&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;102&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;103&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;104&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;105&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;106&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;107&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;108&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;109&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;110&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;111&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;112&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;113&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;114&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;115&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;116&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;117&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;118&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;119&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;120&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;121&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;122&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;123&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;124&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;125&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;126&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;127&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;128&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;129&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;130&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;131&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;132&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;133&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;134&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;135&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;136&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;137&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;138&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;139&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;140&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;141&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;142&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;143&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;144&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;145&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;146&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;147&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;148&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;149&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;150&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;151&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;152&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;153&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;154&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;155&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;156&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;157&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;158&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;159&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;160&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;161&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;162&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;163&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;164&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;165&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;166&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;167&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;168&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;169&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;170&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;171&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;172&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;173&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;174&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;175&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;176&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;177&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;178&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;179&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;180&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;181&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;182&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;183&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;184&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;185&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;186&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;187&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;188&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;189&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;190&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;191&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;192&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;193&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;194&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;195&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;196&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;197&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;198&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;199&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;200&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;201&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;202&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;203&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="code"&gt;
&lt;div&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #60a0b0; font-style: italic;"&gt;# First Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    i &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
    found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; i &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; found:
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[i]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacities[i]:
        found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        i &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; found:
      bins[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; bin_packing_first_fit_var_capa([bin_capacity] &lt;span style="color: #666666;"&gt;*&lt;/span&gt; m, elements)


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Next Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
        bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
        &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
          bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
            &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; bin_capacities[current_bin]:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Best Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; []
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  last_added_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# if not found: add new bin, if possible&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; last_added_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m&lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      last_added_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      bins_in_use &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [last_added_bin]
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; elem
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; last_added_bin
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found? - if not: new bin - does it fit there?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; max_capacity &lt;span style="color: #666666;"&gt;+&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Worst Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure
&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;</taskDescription>
      <feedbackRules id="6" />
      <defaultTransition id="7">
        <conditionExpression id="8">
          <domain>MATH</domain>
        </conditionExpression>
        <stageExpression id="9">
          <domain>MATH</domain>
        </stageExpression>
        <targetStage class="FillInStage" id="10">
          <internalName>#2</internalName>
          <externalName>Which bin?</externalName>
          <taskDescription>&lt;div&gt;&amp;nbsp;&lt;img src="../resource?resource=[var=question_2_image_id]"&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;You are given the current state of bins with their remaining capacities and a list of items that have already been placed.&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #fdf8f3; border: 1px solid #e6d8c3; padding: 12px 16px; border-radius: 6px; color: #333;"&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;Items already packed:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=item_question_2]&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;The next item to be packed is:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=next_item_question_2]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p data-start="277" data-end="382"&gt;Using the &lt;strong data-start="303" data-end="326"&gt;First-Fit Algorithm&lt;/strong&gt;, determine &lt;strong data-start="338" data-end="351"&gt;which bin&lt;/strong&gt; this item will be placed in.&lt;/p&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f4f9ff; border: 1px solid #c8e1ff; padding: 14px 18px; border-radius: 6px; color: #333;"&gt;
&lt;ul&gt;
&lt;li&gt;Enter the &lt;strong&gt;bin number&lt;/strong&gt; (&lt;em&gt;1, 2, 3, &amp;hellip;&lt;/em&gt;) corresponding to the bin where the item will go.&lt;/li&gt;
&lt;li&gt;If the item does not fit into any existing bin, enter &lt;strong&gt;0&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span id="courseTestForm:stages"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;input name="a" size="20" type="text" value="a"&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;details style="border-radius: 5px; display: inline-block; max-width: 100%; width: 100%;"&gt;
&lt;summary style="cursor: pointer; font-size: 16px; display: inline-block; padding: 10px 15px; background-color: #ccc; border-radius: 5px;"&gt;Toggle Code&lt;/summary&gt;
&lt;div style="background-color: #f0f0f0; border-radius: 5px; margin-top: 5px; padding: 10px; max-width: 100%; max-height: 50vh; width: fit-content; overflow: auto;"&gt;
&lt;div class="highlight" style="background: #f0f0f0;"&gt;
&lt;table class="highlighttable"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="linenos"&gt;
&lt;div class="linenodiv"&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  1&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  2&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  3&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  4&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  5&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  6&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  7&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  8&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  9&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 10&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 11&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 12&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 13&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 14&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 15&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 16&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 17&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 18&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 19&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 20&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 21&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 22&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 23&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 24&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 25&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 26&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 27&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 28&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 29&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 30&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 31&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 32&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 33&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 34&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 35&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 36&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 37&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 38&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 39&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 40&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 41&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 42&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 43&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 44&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 45&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 46&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 47&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 48&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 49&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 50&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 51&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 52&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 53&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 54&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 55&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 56&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 57&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 58&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 59&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 60&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 61&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 62&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 63&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 64&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 65&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 66&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 67&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 68&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 69&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 70&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 71&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 72&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 73&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 74&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 75&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 76&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 77&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 78&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 79&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 80&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 81&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 82&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 83&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 84&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 85&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 86&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 87&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 88&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 89&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 90&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 91&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 92&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 93&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 94&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 95&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 96&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 97&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 98&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 99&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;100&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;101&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;102&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;103&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;104&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;105&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;106&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;107&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;108&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;109&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;110&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;111&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;112&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;113&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;114&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;115&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;116&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;117&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;118&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;119&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;120&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;121&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;122&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;123&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;124&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;125&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;126&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;127&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;128&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;129&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;130&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;131&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;132&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;133&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;134&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;135&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;136&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;137&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;138&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;139&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;140&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;141&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;142&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;143&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;144&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;145&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;146&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;147&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;148&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;149&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;150&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;151&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;152&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;153&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;154&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;155&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;156&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;157&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;158&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;159&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;160&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;161&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;162&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;163&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;164&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;165&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;166&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;167&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;168&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;169&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;170&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;171&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;172&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;173&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;174&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;175&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;176&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;177&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;178&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;179&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;180&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;181&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;182&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;183&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;184&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;185&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;186&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;187&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;188&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;189&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;190&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;191&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;192&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;193&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;194&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;195&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;196&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;197&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;198&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;199&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;200&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;201&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;202&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;203&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="code"&gt;
&lt;div&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #60a0b0; font-style: italic;"&gt;# First Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    i &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
    found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; i &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; found:
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[i]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacities[i]:
        found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        i &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; found:
      bins[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; bin_packing_first_fit_var_capa([bin_capacity] &lt;span style="color: #666666;"&gt;*&lt;/span&gt; m, elements)


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Next Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
        bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
        &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
          bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
            &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; bin_capacities[current_bin]:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Best Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; []
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  last_added_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# if not found: add new bin, if possible&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; last_added_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m&lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      last_added_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      bins_in_use &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [last_added_bin]
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; elem
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; last_added_bin
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found? - if not: new bin - does it fit there?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; max_capacity &lt;span style="color: #666666;"&gt;+&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Worst Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure
&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;</taskDescription>
          <feedbackRules id="11" />
          <defaultTransition id="12">
            <conditionExpression id="13">
              <domain>MATH</domain>
            </conditionExpression>
            <stageExpression id="14">
              <domain>MATH</domain>
            </stageExpression>
            <targetStage class="FillInStage" id="15">
              <internalName>#3</internalName>
              <externalName>Which bin?</externalName>
              <taskDescription>&lt;div&gt;&amp;nbsp;&lt;img src="../resource?resource=[var=question_3_image_id]"&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;You are given the current state of bins with their remaining capacities and a list of items that have already been placed.&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #fdf8f3; border: 1px solid #e6d8c3; padding: 12px 16px; border-radius: 6px; color: #333;"&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;Items already packed:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=item_question_3]&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;The next item to be packed is:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=next_item_question_3]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p data-start="277" data-end="382"&gt;Using the &lt;strong data-start="303" data-end="326"&gt;Next-Fit Algorithm&lt;/strong&gt;, determine &lt;strong data-start="338" data-end="351"&gt;which bin&lt;/strong&gt; this item will be placed in.&lt;/p&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f4f9ff; border: 1px solid #c8e1ff; padding: 14px 18px; border-radius: 6px; color: #333;"&gt;
&lt;ul&gt;
&lt;li&gt;Enter the &lt;strong&gt;bin number&lt;/strong&gt; (&lt;em&gt;1, 2, 3, &amp;hellip;&lt;/em&gt;) corresponding to the bin where the item will go.&lt;/li&gt;
&lt;li&gt;If the item does not fit into any existing bin, enter &lt;strong&gt;0&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span id="courseTestForm:stages"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;input name="a" size="20" type="text" value="a"&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;details style="border-radius: 5px; display: inline-block; max-width: 100%; width: 100%;"&gt;
&lt;summary style="cursor: pointer; font-size: 16px; display: inline-block; padding: 10px 15px; background-color: #ccc; border-radius: 5px;"&gt;Toggle Code&lt;/summary&gt;
&lt;div style="background-color: #f0f0f0; border-radius: 5px; margin-top: 5px; padding: 10px; max-width: 100%; max-height: 50vh; width: fit-content; overflow: auto;"&gt;
&lt;div class="highlight" style="background: #f0f0f0;"&gt;
&lt;table class="highlighttable"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="linenos"&gt;
&lt;div class="linenodiv"&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  1&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  2&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  3&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  4&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  5&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  6&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  7&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  8&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  9&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 10&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 11&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 12&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 13&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 14&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 15&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 16&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 17&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 18&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 19&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 20&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 21&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 22&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 23&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 24&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 25&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 26&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 27&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 28&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 29&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 30&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 31&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 32&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 33&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 34&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 35&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 36&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 37&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 38&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 39&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 40&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 41&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 42&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 43&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 44&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 45&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 46&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 47&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 48&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 49&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 50&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 51&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 52&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 53&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 54&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 55&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 56&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 57&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 58&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 59&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 60&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 61&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 62&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 63&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 64&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 65&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 66&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 67&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 68&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 69&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 70&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 71&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 72&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 73&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 74&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 75&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 76&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 77&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 78&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 79&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 80&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 81&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 82&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 83&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 84&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 85&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 86&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 87&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 88&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 89&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 90&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 91&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 92&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 93&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 94&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 95&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 96&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 97&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 98&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 99&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;100&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;101&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;102&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;103&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;104&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;105&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;106&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;107&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;108&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;109&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;110&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;111&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;112&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;113&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;114&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;115&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;116&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;117&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;118&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;119&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;120&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;121&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;122&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;123&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;124&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;125&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;126&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;127&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;128&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;129&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;130&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;131&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;132&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;133&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;134&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;135&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;136&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;137&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;138&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;139&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;140&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;141&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;142&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;143&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;144&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;145&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;146&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;147&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;148&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;149&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;150&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;151&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;152&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;153&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;154&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;155&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;156&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;157&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;158&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;159&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;160&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;161&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;162&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;163&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;164&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;165&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;166&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;167&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;168&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;169&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;170&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;171&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;172&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;173&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;174&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;175&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;176&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;177&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;178&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;179&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;180&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;181&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;182&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;183&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;184&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;185&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;186&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;187&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;188&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;189&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;190&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;191&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;192&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;193&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;194&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;195&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;196&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;197&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;198&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;199&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;200&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;201&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;202&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;203&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="code"&gt;
&lt;div&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #60a0b0; font-style: italic;"&gt;# First Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    i &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
    found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; i &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; found:
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[i]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacities[i]:
        found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        i &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; found:
      bins[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; bin_packing_first_fit_var_capa([bin_capacity] &lt;span style="color: #666666;"&gt;*&lt;/span&gt; m, elements)


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Next Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
        bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
        &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
          bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
            &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; bin_capacities[current_bin]:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Best Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; []
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  last_added_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# if not found: add new bin, if possible&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; last_added_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m&lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      last_added_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      bins_in_use &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [last_added_bin]
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; elem
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; last_added_bin
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found? - if not: new bin - does it fit there?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; max_capacity &lt;span style="color: #666666;"&gt;+&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Worst Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure
&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;</taskDescription>
              <feedbackRules id="16" />
              <defaultTransition id="17">
                <conditionExpression id="18">
                  <domain>MATH</domain>
                </conditionExpression>
                <stageExpression id="19">
                  <domain>MATH</domain>
                </stageExpression>
                <targetStage class="FillInStage" id="20">
                  <internalName>#4</internalName>
                  <externalName>Which bin?</externalName>
                  <taskDescription>&lt;div&gt;&amp;nbsp;&lt;img src="../resource?resource=[var=question_4_image_id]"&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;You are given the current state of bins with their remaining capacities and a list of items that have already been placed.&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #fdf8f3; border: 1px solid #e6d8c3; padding: 12px 16px; border-radius: 6px; color: #333;"&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;Items already packed:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=item_question_4]&lt;/span&gt;&lt;/p&gt;
&lt;p style="margin: 6px 0;"&gt;&lt;strong style="color: #704214;"&gt;The next item to be packed is:&lt;/strong&gt; &lt;span style="color: #000; font-weight: bold; font-size: 1.1em;"&gt;[var=next_item_question_4]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p data-start="277" data-end="382"&gt;Using the &lt;strong data-start="303" data-end="326"&gt;Worst-Fit Algorithm&lt;/strong&gt;, determine &lt;strong data-start="338" data-end="351"&gt;which bin&lt;/strong&gt; this item will be placed in.&lt;/p&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f4f9ff; border: 1px solid #c8e1ff; padding: 14px 18px; border-radius: 6px; color: #333;"&gt;
&lt;ul&gt;
&lt;li&gt;Enter the &lt;strong&gt;bin number&lt;/strong&gt; (&lt;em&gt;1, 2, 3, &amp;hellip;&lt;/em&gt;) corresponding to the bin where the item will go.&lt;/li&gt;
&lt;li&gt;If the item does not fit into any existing bin, enter &lt;strong&gt;0&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span id="courseTestForm:stages"&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;input name="a" size="20" type="text" value="a"&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;details style="border-radius: 5px; display: inline-block; max-width: 100%; width: 100%;"&gt;
&lt;summary style="cursor: pointer; font-size: 16px; display: inline-block; padding: 10px 15px; background-color: #ccc; border-radius: 5px;"&gt;Toggle Code&lt;/summary&gt;
&lt;div style="background-color: #f0f0f0; border-radius: 5px; margin-top: 5px; padding: 10px; max-width: 100%; max-height: 50vh; width: fit-content; overflow: auto;"&gt;
&lt;div class="highlight" style="background: #f0f0f0;"&gt;
&lt;table class="highlighttable"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="linenos"&gt;
&lt;div class="linenodiv"&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  1&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  2&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  3&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  4&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  5&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  6&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  7&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  8&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;  9&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 10&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 11&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 12&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 13&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 14&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 15&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 16&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 17&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 18&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 19&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 20&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 21&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 22&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 23&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 24&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 25&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 26&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 27&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 28&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 29&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 30&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 31&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 32&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 33&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 34&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 35&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 36&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 37&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 38&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 39&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 40&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 41&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 42&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 43&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 44&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 45&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 46&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 47&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 48&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 49&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 50&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 51&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 52&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 53&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 54&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 55&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 56&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 57&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 58&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 59&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 60&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 61&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 62&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 63&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 64&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 65&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 66&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 67&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 68&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 69&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 70&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 71&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 72&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 73&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 74&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 75&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 76&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 77&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 78&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 79&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 80&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 81&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 82&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 83&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 84&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 85&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 86&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 87&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 88&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 89&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 90&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 91&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 92&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 93&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 94&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 95&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 96&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 97&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 98&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt; 99&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;100&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;101&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;102&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;103&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;104&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;105&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;106&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;107&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;108&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;109&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;110&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;111&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;112&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;113&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;114&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;115&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;116&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;117&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;118&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;119&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;120&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;121&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;122&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;123&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;124&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;125&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;126&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;127&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;128&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;129&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;130&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;131&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;132&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;133&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;134&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;135&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;136&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;137&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;138&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;139&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;140&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;141&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;142&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;143&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;144&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;145&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;146&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;147&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;148&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;149&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;150&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;151&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;152&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;153&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;154&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;155&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;156&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;157&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;158&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;159&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;160&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;161&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;162&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;163&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;164&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;165&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;166&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;167&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;168&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;169&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;170&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;171&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;172&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;173&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;174&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;175&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;176&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;177&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;178&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;179&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;180&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;181&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;182&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;183&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;184&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;185&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;186&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;187&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;188&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;189&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;190&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;191&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;192&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;193&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;194&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;195&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;196&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;197&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;198&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;199&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;200&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;201&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;202&lt;/span&gt;
&lt;span style="color: #666666; background-color: transparent; padding-left: 5px; padding-right: 5px;"&gt;203&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="code"&gt;
&lt;div&gt;
&lt;pre style="line-height: 125%;"&gt;&lt;span style="color: #60a0b0; font-style: italic;"&gt;# First Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    i &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
    found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; i &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; found:
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[i]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacities[i]:
        found &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        i &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; found:
      bins[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[i] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_first_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; bin_packing_first_fit_var_capa([bin_capacity] &lt;span style="color: #666666;"&gt;*&lt;/span&gt; m, elements)


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Next Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;lt;=&lt;/span&gt; bin_capacity:
        bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
        &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
          bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
        is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_next_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  current_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #007020; font-weight: bold;"&gt;while&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
            &lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[current_bin]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; bin_capacities[current_bin]:
      current_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; current_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m:
      bins[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[current_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Best Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; []
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  last_added_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# if not found: add new bin, if possible&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; last_added_bin &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; m&lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      last_added_bin &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
      bins_in_use &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [last_added_bin]
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; elem
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; last_added_bin
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found? - if not: new bin - does it fit there?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_best_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits best&lt;/span&gt;
    best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; max_capacity &lt;span style="color: #666666;"&gt;+&lt;/span&gt; &lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;lt;&lt;/span&gt; best_remaining_capacity:
        best_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        best_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[best_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; best_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(best_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #60a0b0; font-style: italic;"&gt;# Worst Fit Algorithm #######################################&lt;/span&gt;
&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_fixed_capa&lt;/span&gt;(bin_capacity, m, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; b &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; bins_in_use:
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacity &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[b]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; b
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure


&lt;span style="color: #007020; font-weight: bold;"&gt;def&lt;/span&gt; &lt;span style="color: #06287e;"&gt;bin_packing_worst_fit_var_capa&lt;/span&gt;(bin_capacities, elements):
  is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;True&lt;/span&gt;
  n &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(elements)
  m &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bin_capacities)
  max_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020;"&gt;max&lt;/span&gt;(bin_capacities)
  bins &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_in_use &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [i &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  bins_packed_after_failure &lt;span style="color: #666666;"&gt;=&lt;/span&gt; [[] &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; _ &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(m)]
  &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; elem &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; elements:
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# search for bin in use where it fits worst&lt;/span&gt;
    worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;for&lt;/span&gt; i &lt;span style="color: #007020; font-weight: bold;"&gt;in&lt;/span&gt; &lt;span style="color: #007020;"&gt;range&lt;/span&gt;(&lt;span style="color: #007020;"&gt;len&lt;/span&gt;(bins_in_use)):
      remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bin_capacities[bins_in_use[i]
                                          ] &lt;span style="color: #666666;"&gt;-&lt;/span&gt; (&lt;span style="color: #007020;"&gt;sum&lt;/span&gt;(bins[bins_in_use[i]]) &lt;span style="color: #666666;"&gt;+&lt;/span&gt; elem)
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;and&lt;/span&gt; \
         remaining_capacity &lt;span style="color: #666666;"&gt;&amp;gt;&lt;/span&gt; worst_remaining_capacity:
        worst_bin &lt;span style="color: #666666;"&gt;=&lt;/span&gt; bins_in_use[i]
        worst_remaining_capacity &lt;span style="color: #666666;"&gt;=&lt;/span&gt; remaining_capacity
    &lt;span style="color: #60a0b0; font-style: italic;"&gt;# found?&lt;/span&gt;
    &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_bin &lt;span style="color: #666666;"&gt;!=&lt;/span&gt; &lt;span style="color: #666666;"&gt;-&lt;/span&gt;&lt;span style="color: #40a070;"&gt;1&lt;/span&gt;:
      bins[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;not&lt;/span&gt; is_packing_possible:
        bins_packed_after_failure[worst_bin] &lt;span style="color: #666666;"&gt;+=&lt;/span&gt; [elem]
      &lt;span style="color: #60a0b0; font-style: italic;"&gt;# is this bin full now?&lt;/span&gt;
      &lt;span style="color: #007020; font-weight: bold;"&gt;if&lt;/span&gt; worst_remaining_capacity &lt;span style="color: #666666;"&gt;==&lt;/span&gt; &lt;span style="color: #40a070;"&gt;0&lt;/span&gt;:
        bins_in_use&lt;span style="color: #666666;"&gt;.&lt;/span&gt;remove(worst_bin)
    &lt;span style="color: #007020; font-weight: bold;"&gt;else&lt;/span&gt;:
      is_packing_possible &lt;span style="color: #666666;"&gt;=&lt;/span&gt; &lt;span style="color: #007020; font-weight: bold;"&gt;False&lt;/span&gt;
  &lt;span style="color: #007020; font-weight: bold;"&gt;return&lt;/span&gt; is_packing_possible, bins, bins_packed_after_failure
&lt;/pre&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;</taskDescription>
                  <feedbackRules id="21" />
                  <defaultTransition id="22">
                    <conditionExpression id="23">
                      <domain>MATH</domain>
                    </conditionExpression>
                    <stageExpression id="24">
                      <domain>MATH</domain>
                    </stageExpression>
                    <type>NEXT_OR_END</type>
                    <extraWeight>0</extraWeight>
                  </defaultTransition>
                  <skipTransitions id="25" />
                  <stageTransitions id="26" />
                  <hints id="27" />
                  <variableUpdatesOnEnter id="28" />
                  <variableUpdatesBeforeCheck id="29" />
                  <variableUpdatesAfterCheck id="30" />
                  <variableUpdatesOnNormalExit id="31" />
                  <variableUpdatesOnRepeat id="32" />
                  <variableUpdatesOnSkip id="33" />
                  <weight>1</weight>
                  <orderIndex>3</orderIndex>
                  <allowSkip>false</allowSkip>
                  <resources id="34" />
                  <fillInFields id="35">
                    <FillInField id="36">
                      <name>a</name>
                      <orderIndex>0</orderIndex>
                      <editorType>NUMBER_OR_TEXT</editorType>
                      <size>40</size>
                      <maxInputSize>9999</maxInputSize>
                    </FillInField>
                  </fillInFields>
                  <dropDownFields id="37" />
                  <kekuleFields id="38" />
                  <formulaEditorPalette>INVISIBLE_MATH</formulaEditorPalette>
                  <defaultFeedback>&lt;div&gt;
&lt;div&gt;Incorrect.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;Solution: [var=target_bin_question_4]&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f6fff8; border-left: 6px solid #4caf50; padding: 12px 16px; border-radius: 4px; color: #2e4831;"&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;br&gt;&lt;em&gt;Worst-Fit&lt;/em&gt;&lt;strong&gt; &lt;/strong&gt;looks at &lt;strong&gt;ALL&lt;/strong&gt; bins that can fit the item, then chooses the one with the &lt;strong&gt;MOST&lt;/strong&gt; remaining space after placement.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</defaultFeedback>
                  <correctAnswerRules id="39">
                    <FeedbackRule id="40">
                      <name>Feedback 1</name>
                      <orderIndex>1</orderIndex>
                      <validationExpression id="41">
                        <code>matches([input=a], [var=target_bin_regex_question_4])</code>
                        <domain>MATH</domain>
                      </validationExpression>
                      <points>0</points>
                      <terminal>false</terminal>
                      <fieldsToBeMarked id="42" />
                    </FeedbackRule>
                  </correctAnswerRules>
                  <correctAnswerFeedback>&lt;div&gt;
&lt;div&gt;Correct.&lt;/div&gt;
&lt;/div&gt;</correctAnswerFeedback>
                  <defaultResult>0</defaultResult>
                  <kekuleEditorConfigurations id="43">
                    <configs id="44">
                      <kekuleConfiguration id="45">
                        <name>commonToolButtons</name>
                        <selectedOption id="46">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                      <kekuleConfiguration id="47">
                        <name>chemToolButtons</name>
                        <selectedOption id="48">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                      <kekuleConfiguration id="49">
                        <name>allowedObjModifierCategories</name>
                        <selectedOption id="50">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                      <kekuleConfiguration id="51">
                        <name>availableBondForms</name>
                        <selectedOption id="52">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                      <kekuleConfiguration id="53">
                        <name>availableNonAtomTypes</name>
                        <selectedOption id="54">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                      <kekuleConfiguration id="55">
                        <name>defHydrogenDisplayLevel</name>
                        <selectedOption id="56">
                          <name>default</name>
                          <value />
                        </selectedOption>
                      </kekuleConfiguration>
                    </configs>
                  </kekuleEditorConfigurations>
                </targetStage>
                <type>NEXT_OR_END</type>
                <extraWeight>0</extraWeight>
              </defaultTransition>
              <skipTransitions id="57" />
              <stageTransitions id="58" />
              <hints id="59" />
              <variableUpdatesOnEnter id="60" />
              <variableUpdatesBeforeCheck id="61" />
              <variableUpdatesAfterCheck id="62" />
              <variableUpdatesOnNormalExit id="63" />
              <variableUpdatesOnRepeat id="64" />
              <variableUpdatesOnSkip id="65" />
              <weight>1</weight>
              <orderIndex>2</orderIndex>
              <allowSkip>false</allowSkip>
              <resources id="66" />
              <fillInFields id="67">
                <FillInField id="68">
                  <name>a</name>
                  <orderIndex>0</orderIndex>
                  <editorType>NUMBER_OR_TEXT</editorType>
                  <size>40</size>
                  <maxInputSize>9999</maxInputSize>
                </FillInField>
              </fillInFields>
              <dropDownFields id="69" />
              <kekuleFields id="70" />
              <formulaEditorPalette>INVISIBLE_MATH</formulaEditorPalette>
              <defaultFeedback>&lt;div&gt;
&lt;div&gt;Incorrect.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;Solution: [var=target_bin_question_3]&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f6fff8; border-left: 6px solid #4caf50; padding: 12px 16px; border-radius: 4px; color: #2e4831;"&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;br&gt;&lt;em&gt;Next-Fit&lt;/em&gt; continues from where it left off. Find the &lt;strong&gt;last&lt;/strong&gt; bin that was &lt;strong&gt;used&lt;/strong&gt;, then check bins starting from the &lt;strong&gt;next one&lt;/strong&gt; in sequence.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</defaultFeedback>
              <correctAnswerRules id="71">
                <FeedbackRule id="72">
                  <name>Feedback 1</name>
                  <orderIndex>1</orderIndex>
                  <validationExpression id="73">
                    <code>matches([input=a], [var=target_bin_regex_question_3])</code>
                    <domain>MATH</domain>
                  </validationExpression>
                  <points>0</points>
                  <terminal>false</terminal>
                  <fieldsToBeMarked id="74" />
                </FeedbackRule>
              </correctAnswerRules>
              <correctAnswerFeedback>&lt;div&gt;Correct.&lt;/div&gt;</correctAnswerFeedback>
              <defaultResult>0</defaultResult>
              <kekuleEditorConfigurations id="75">
                <configs id="76">
                  <kekuleConfiguration id="77">
                    <name>commonToolButtons</name>
                    <selectedOption id="78">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                  <kekuleConfiguration id="79">
                    <name>chemToolButtons</name>
                    <selectedOption id="80">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                  <kekuleConfiguration id="81">
                    <name>allowedObjModifierCategories</name>
                    <selectedOption id="82">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                  <kekuleConfiguration id="83">
                    <name>availableBondForms</name>
                    <selectedOption id="84">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                  <kekuleConfiguration id="85">
                    <name>availableNonAtomTypes</name>
                    <selectedOption id="86">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                  <kekuleConfiguration id="87">
                    <name>defHydrogenDisplayLevel</name>
                    <selectedOption id="88">
                      <name>default</name>
                      <value />
                    </selectedOption>
                  </kekuleConfiguration>
                </configs>
              </kekuleEditorConfigurations>
            </targetStage>
            <type>NEXT_OR_END</type>
            <extraWeight>0</extraWeight>
          </defaultTransition>
          <skipTransitions id="89" />
          <stageTransitions id="90" />
          <hints id="91" />
          <variableUpdatesOnEnter id="92" />
          <variableUpdatesBeforeCheck id="93" />
          <variableUpdatesAfterCheck id="94" />
          <variableUpdatesOnNormalExit id="95" />
          <variableUpdatesOnRepeat id="96" />
          <variableUpdatesOnSkip id="97" />
          <weight>1</weight>
          <orderIndex>1</orderIndex>
          <allowSkip>false</allowSkip>
          <resources id="98" />
          <fillInFields id="99">
            <FillInField id="100">
              <name>a</name>
              <orderIndex>0</orderIndex>
              <editorType>NUMBER_OR_TEXT</editorType>
              <size>40</size>
              <maxInputSize>9999</maxInputSize>
            </FillInField>
          </fillInFields>
          <dropDownFields id="101" />
          <kekuleFields id="102" />
          <formulaEditorPalette>INVISIBLE_MATH</formulaEditorPalette>
          <defaultFeedback>&lt;div&gt;
&lt;div&gt;Incorrect.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;Solution: [var=target_bin_question_2]&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f6fff8; border-left: 6px solid #4caf50; padding: 12px 16px; border-radius: 4px; color: #2e4831;"&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;br&gt;&lt;em&gt;First-Fit &lt;/em&gt;checks bins in order: &lt;em&gt;Bin&amp;nbsp;1&lt;/em&gt;, then &lt;em&gt;Bin&amp;nbsp;2&lt;/em&gt;, then &lt;em&gt;Bin&amp;nbsp;3&lt;/em&gt;...&lt;br&gt;Place the item in the &lt;strong&gt;first bin&lt;/strong&gt; that has &lt;strong&gt;enough&lt;/strong&gt; remaining &lt;strong&gt;capacity&lt;/strong&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</defaultFeedback>
          <correctAnswerRules id="103">
            <FeedbackRule id="104">
              <name>Feedback 1</name>
              <orderIndex>1</orderIndex>
              <validationExpression id="105">
                <code>matches([input=a], [var=target_bin_regex_question_2])</code>
                <domain>MATH</domain>
              </validationExpression>
              <points>0</points>
              <terminal>false</terminal>
              <fieldsToBeMarked id="106" />
            </FeedbackRule>
          </correctAnswerRules>
          <correctAnswerFeedback>&lt;div&gt;
&lt;div&gt;Correct.&lt;/div&gt;
&lt;/div&gt;</correctAnswerFeedback>
          <defaultResult>0</defaultResult>
          <kekuleEditorConfigurations id="107">
            <configs id="108">
              <kekuleConfiguration id="109">
                <name>commonToolButtons</name>
                <selectedOption id="110">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
              <kekuleConfiguration id="111">
                <name>chemToolButtons</name>
                <selectedOption id="112">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
              <kekuleConfiguration id="113">
                <name>allowedObjModifierCategories</name>
                <selectedOption id="114">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
              <kekuleConfiguration id="115">
                <name>availableBondForms</name>
                <selectedOption id="116">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
              <kekuleConfiguration id="117">
                <name>availableNonAtomTypes</name>
                <selectedOption id="118">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
              <kekuleConfiguration id="119">
                <name>defHydrogenDisplayLevel</name>
                <selectedOption id="120">
                  <name>default</name>
                  <value />
                </selectedOption>
              </kekuleConfiguration>
            </configs>
          </kekuleEditorConfigurations>
        </targetStage>
        <type>NEXT_OR_END</type>
        <extraWeight>0</extraWeight>
      </defaultTransition>
      <skipTransitions id="121" />
      <stageTransitions id="122" />
      <hints id="123" />
      <variableUpdatesOnEnter id="124" />
      <variableUpdatesBeforeCheck id="125" />
      <variableUpdatesAfterCheck id="126" />
      <variableUpdatesOnNormalExit id="127" />
      <variableUpdatesOnRepeat id="128" />
      <variableUpdatesOnSkip id="129" />
      <weight>1</weight>
      <orderIndex>0</orderIndex>
      <allowSkip>false</allowSkip>
      <resources id="130" />
      <fillInFields id="131">
        <FillInField id="132">
          <name>a</name>
          <orderIndex>0</orderIndex>
          <editorType>NUMBER_OR_TEXT</editorType>
          <size>20</size>
          <maxInputSize>9999</maxInputSize>
        </FillInField>
      </fillInFields>
      <dropDownFields id="133" />
      <kekuleFields id="134" />
      <formulaEditorPalette>INVISIBLE_MATH</formulaEditorPalette>
      <defaultFeedback>&lt;div&gt;
&lt;div&gt;Incorrect.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;Solution: [var=target_bin_question_1]&lt;/div&gt;
&lt;div style="font-family: Arial, sans-serif; line-height: 1.6; margin: 20px;"&gt;
&lt;div style="background: #f6fff8; border-left: 6px solid #4caf50; padding: 12px 16px; border-radius: 4px; color: #2e4831;"&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;br&gt;&lt;em&gt;Best-Fit&lt;/em&gt; looks at &lt;strong&gt;ALL&lt;/strong&gt; bins that can fit the item, then chooses the one with the &lt;strong&gt;LEAST&lt;/strong&gt; remaining space after placement.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</defaultFeedback>
      <correctAnswerRules id="135">
        <FeedbackRule id="136">
          <name>Feedback 1</name>
          <orderIndex>1</orderIndex>
          <validationExpression id="137">
            <code>matches([input=a], [var=target_bin_regex_question_1])</code>
            <domain>MATH</domain>
          </validationExpression>
          <points>0</points>
          <terminal>false</terminal>
          <fieldsToBeMarked id="138" />
        </FeedbackRule>
      </correctAnswerRules>
      <correctAnswerFeedback>&lt;div&gt;Correct.&lt;/div&gt;</correctAnswerFeedback>
      <defaultResult>0</defaultResult>
      <kekuleEditorConfigurations id="139">
        <configs id="140">
          <kekuleConfiguration id="141">
            <name>commonToolButtons</name>
            <selectedOption id="142">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="143">
            <name>chemToolButtons</name>
            <selectedOption id="144">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="145">
            <name>allowedObjModifierCategories</name>
            <selectedOption id="146">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="147">
            <name>availableBondForms</name>
            <selectedOption id="148">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="149">
            <name>availableNonAtomTypes</name>
            <selectedOption id="150">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
          <kekuleConfiguration id="151">
            <name>defHydrogenDisplayLevel</name>
            <selectedOption id="152">
              <name>default</name>
              <value />
            </selectedOption>
          </kekuleConfiguration>
        </configs>
      </kekuleEditorConfigurations>
    </FillInStage>
    <FillInStage reference="10" />
    <FillInStage reference="15" />
    <FillInStage reference="20" />
  </stages>
  <startStage class="FillInStage" reference="5" />
  <variableDeclarations id="153">
    <VariableDeclaration id="154">
  <name>index_question_1</name>
  <initializationCode id="155">
    <code>randomIntegerBetween(0, 10)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="156">
  <name>bin_capacities_question_1</name>
  <initializationCode id="157">
    <code>list(&apos;[9, 13, 8, 13]&apos;, &apos;[11, 8, 9, 11, 14, 13]&apos;, &apos;[9, 15, 13, 9, 12, 11]&apos;, &apos;[8, 13]&apos;, &apos;[15, 14]&apos;, &apos;[12, 6, 10]&apos;, &apos;[7, 15]&apos;, &apos;[14, 12, 9]&apos;, &apos;[12, 15]&apos;, &apos;[8, 6, 9, 11]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="158">
  <name>bin_capacity_question_1</name>
  <initializationCode id="159">
    <code>getFromList([var=index_question_1],[var=bin_capacities_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="160">
  <name>items_question_1</name>
  <initializationCode id="161">
    <code>list(&apos;[10, 2, 4]&apos;, &apos;[11, 8, 7, 8]&apos;, &apos;[14, 11, 14, 9, 4]&apos;, &apos;[3, 8, 4, 11, 2, 3]&apos;, &apos;[14, 14, 10]&apos;, &apos;[12, 3, 11, 3, 11, 4]&apos;, &apos;[13, 7, 9, 3]&apos;, &apos;[5, 10, 3]&apos;, &apos;[7, 6, 14, 12, 14]&apos;, &apos;[11, 14]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="162">
  <name>item_question_1</name>
  <initializationCode id="163">
    <code>getFromList([var=index_question_1],[var=items_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="164">
  <name>next_items_question_1</name>
  <initializationCode id="165">
    <code>list(&apos;8&apos;, &apos;3&apos;, &apos;3&apos;, &apos;4&apos;, &apos;4&apos;, &apos;2&apos;, &apos;9&apos;, &apos;7&apos;, &apos;4&apos;, &apos;5&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="166">
  <name>next_item_question_1</name>
  <initializationCode id="167">
    <code>getFromList([var=index_question_1],[var=next_items_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="168">
  <name>target_bins_question_1</name>
  <initializationCode id="169">
    <code>list(&apos;1&apos;, &apos;4&apos;, &apos;4&apos;, &apos;0&apos;, &apos;0&apos;, &apos;3&apos;, &apos;0&apos;, &apos;1&apos;, &apos;1&apos;, &apos;2&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="170">
  <name>target_bin_question_1</name>
  <initializationCode id="171">
    <code>getFromList([var=index_question_1],[var=target_bins_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="172">
  <name>target_bins_regexes_question_1</name>
  <initializationCode id="173">
    <code>list(&apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*4\s*\]*&apos;, &apos;\[*\s*4\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="174">
  <name>target_bin_regex_question_1</name>
  <initializationCode id="175">
    <code>getFromList([var=index_question_1],[var=target_bins_regexes_question_1])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="176">
  <name>image_ids_start</name>
  <initializationCode id="177">
    <code>Put image start id here</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="178">
  <name>question_1_image_id</name>
  <initializationCode id="179">
    <code>[var=image_ids_start] + 0 + [var=index_question_1]</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="180">
  <name>index_question_2</name>
  <initializationCode id="181">
    <code>randomIntegerBetween(0, 10)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="182">
  <name>bin_capacities_question_2</name>
  <initializationCode id="183">
    <code>list(&apos;[11, 9, 12, 14, 6, 12]&apos;, &apos;[6, 13, 15, 13, 7]&apos;, &apos;[11, 15, 7, 6, 7]&apos;, &apos;[11, 7, 7, 14, 8]&apos;, &apos;[9, 12, 6]&apos;, &apos;[10, 14, 8, 9, 11]&apos;, &apos;[9, 15]&apos;, &apos;[6, 15, 14, 15]&apos;, &apos;[8, 10, 11, 8]&apos;, &apos;[12, 6, 7, 12, 12, 12]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="184">
  <name>bin_capacity_question_2</name>
  <initializationCode id="185">
    <code>getFromList([var=index_question_2],[var=bin_capacities_question_2])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="186">
  <name>items_question_2</name>
  <initializationCode id="187">
    <code>list(&apos;[6, 8, 10, 6, 3]&apos;, &apos;[9, 6, 5, 5, 5, 8]&apos;, &apos;[3, 9, 9, 3]&apos;, &apos;[5, 6, 2, 13, 6]&apos;, &apos;[5, 9, 4, 13, 13, 11, 10]&apos;, &apos;[2, 5, 2]&apos;, &apos;[7, 7, 7, 13, 4, 14]&apos;, &apos;[10, 3, 13, 2, 9, 4, 5]&apos;, &apos;[4, 5, 14, 9, 10, 9, 12]&apos;, &apos;[11, 2, 11]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="188">
  <name>item_question_2</name>
  <initializationCode id="189">
    <code>getFromList([var=index_question_2],[var=items_question_2])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="190">
  <name>next_items_question_2</name>
  <initializationCode id="191">
    <code>list(&apos;7&apos;, &apos;9&apos;, &apos;3&apos;, &apos;4&apos;, &apos;4&apos;, &apos;4&apos;, &apos;4&apos;, &apos;4&apos;, &apos;6&apos;, &apos;5&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="192">
  <name>next_item_question_2</name>
  <initializationCode id="193">
    <code>getFromList([var=index_question_2],[var=next_items_question_2])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="194">
  <name>target_bins_question_2</name>
  <initializationCode id="195">
    <code>list(&apos;4&apos;, &apos;0&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;2&apos;, &apos;0&apos;, &apos;0&apos;, &apos;4&apos;, &apos;3&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="196">
  <name>target_bin_question_2</name>
  <initializationCode id="197">
    <code>getFromList([var=index_question_2],[var=target_bins_question_2])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="198">
  <name>target_bins_regexes_question_2</name>
  <initializationCode id="199">
    <code>list(&apos;\[*\s*4\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*4\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="200">
  <name>target_bin_regex_question_2</name>
  <initializationCode id="201">
    <code>getFromList([var=index_question_2],[var=target_bins_regexes_question_2])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="202">
  <name>question_2_image_id</name>
  <initializationCode id="203">
    <code>[var=image_ids_start] + 10 + [var=index_question_2]</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="204">
  <name>index_question_3</name>
  <initializationCode id="205">
    <code>randomIntegerBetween(0, 10)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="206">
  <name>bin_capacities_question_3</name>
  <initializationCode id="207">
    <code>list(&apos;[6, 8, 7, 15]&apos;, &apos;[15, 10, 7, 14, 7]&apos;, &apos;[7, 13]&apos;, &apos;[10, 15, 10, 8, 13, 14]&apos;, &apos;[12, 9, 11, 8, 12]&apos;, &apos;[11, 15, 12]&apos;, &apos;[11, 6, 15, 9]&apos;, &apos;[15, 6]&apos;, &apos;[10, 14, 6, 15]&apos;, &apos;[10, 9]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="208">
  <name>bin_capacity_question_3</name>
  <initializationCode id="209">
    <code>getFromList([var=index_question_3],[var=bin_capacities_question_3])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="210">
  <name>items_question_3</name>
  <initializationCode id="211">
    <code>list(&apos;[8, 10, 12, 9, 4, 7, 6]&apos;, &apos;[3, 10, 12, 7, 11, 8, 10]&apos;, &apos;[3, 4, 14, 7, 4, 11, 4]&apos;, &apos;[7, 9]&apos;, &apos;[13, 2, 5, 2, 6, 5, 10]&apos;, &apos;[8, 5, 3]&apos;, &apos;[5, 7, 7, 12, 10, 6, 11]&apos;, &apos;[12, 12, 13, 10]&apos;, &apos;[5, 8, 3, 7, 4]&apos;, &apos;[5, 11]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="212">
  <name>item_question_3</name>
  <initializationCode id="213">
    <code>getFromList([var=index_question_3],[var=items_question_3])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="214">
  <name>next_items_question_3</name>
  <initializationCode id="215">
    <code>list(&apos;8&apos;, &apos;5&apos;, &apos;8&apos;, &apos;9&apos;, &apos;5&apos;, &apos;5&apos;, &apos;3&apos;, &apos;9&apos;, &apos;8&apos;, &apos;9&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="216">
  <name>next_item_question_3</name>
  <initializationCode id="217">
    <code>getFromList([var=index_question_3],[var=next_items_question_3])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="218">
  <name>target_bins_question_3</name>
  <initializationCode id="219">
    <code>list(&apos;0&apos;, &apos;2&apos;, &apos;2&apos;, &apos;3&apos;, &apos;1&apos;, &apos;3&apos;, &apos;4&apos;, &apos;0&apos;, &apos;0&apos;, &apos;2&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="220">
  <name>target_bin_question_3</name>
  <initializationCode id="221">
    <code>getFromList([var=index_question_3],[var=target_bins_question_3])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="222">
  <name>target_bins_regexes_question_3</name>
  <initializationCode id="223">
    <code>list(&apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;, &apos;\[*\s*4\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="224">
  <name>target_bin_regex_question_3</name>
  <initializationCode id="225">
    <code>getFromList([var=index_question_3],[var=target_bins_regexes_question_3])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="226">
  <name>question_3_image_id</name>
  <initializationCode id="227">
    <code>[var=image_ids_start] + 20 + [var=index_question_3]</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="228">
  <name>index_question_4</name>
  <initializationCode id="229">
    <code>randomIntegerBetween(0, 10)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="230">
  <name>bin_capacities_question_4</name>
  <initializationCode id="231">
    <code>list(&apos;[14, 11, 6, 9, 9]&apos;, &apos;[9, 10]&apos;, &apos;[15, 9, 13, 10, 15, 9]&apos;, &apos;[7, 11, 11, 6, 7]&apos;, &apos;[8, 15, 7]&apos;, &apos;[13, 13, 8, 12, 10]&apos;, &apos;[7, 13]&apos;, &apos;[14, 9]&apos;, &apos;[10, 13, 6, 11]&apos;, &apos;[14, 15, 11, 15]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="232">
  <name>bin_capacity_question_4</name>
  <initializationCode id="233">
    <code>getFromList([var=index_question_4],[var=bin_capacities_question_4])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="234">
  <name>items_question_4</name>
  <initializationCode id="235">
    <code>list(&apos;[8, 3, 5, 7, 9, 4]&apos;, &apos;[2, 6]&apos;, &apos;[4, 2]&apos;, &apos;[4, 6, 11, 9]&apos;, &apos;[4, 6, 11, 7, 7]&apos;, &apos;[13, 4, 12]&apos;, &apos;[10, 6, 12]&apos;, &apos;[3, 2, 9, 8]&apos;, &apos;[5, 8]&apos;, &apos;[13, 8, 5, 9, 2]&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="236">
  <name>item_question_4</name>
  <initializationCode id="237">
    <code>getFromList([var=index_question_4],[var=items_question_4])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="238">
  <name>next_items_question_4</name>
  <initializationCode id="239">
    <code>list(&apos;3&apos;, &apos;8&apos;, &apos;6&apos;, &apos;7&apos;, &apos;2&apos;, &apos;8&apos;, &apos;6&apos;, &apos;8&apos;, &apos;4&apos;, &apos;9&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="240">
  <name>next_item_question_4</name>
  <initializationCode id="241">
    <code>getFromList([var=index_question_4],[var=next_items_question_4])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="242">
  <name>target_bins_question_4</name>
  <initializationCode id="243">
    <code>list(&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;1&apos;, &apos;2&apos;, &apos;5&apos;, &apos;0&apos;, &apos;0&apos;, &apos;1&apos;, &apos;0&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="244">
  <name>target_bin_question_4</name>
  <initializationCode id="245">
    <code>getFromList([var=index_question_4],[var=target_bins_question_4])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="246">
  <name>target_bins_regexes_question_4</name>
  <initializationCode id="247">
    <code>list(&apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*3\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*2\s*\]*&apos;, &apos;\[*\s*5\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;, &apos;\[*\s*1\s*\]*&apos;, &apos;\[*\s*0\s*\]*&apos;)</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="248">
  <name>target_bin_regex_question_4</name>
  <initializationCode id="249">
    <code>getFromList([var=index_question_4],[var=target_bins_regexes_question_4])</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration><VariableDeclaration id="250">
  <name>question_4_image_id</name>
  <initializationCode id="251">
    <code>[var=image_ids_start] + 30 + [var=index_question_4]</code>
    <domain>MATH</domain>
  </initializationCode>
</VariableDeclaration></variableDeclarations>
  <jSXGraphs id="252" />
  <dynamicMolecules id="253" />
  <resultFeedbackMappings id="254" />
</Exercise>